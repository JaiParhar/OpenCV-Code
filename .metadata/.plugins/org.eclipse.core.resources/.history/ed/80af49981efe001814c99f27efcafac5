package com.main.kparhar;

import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.opencv.core.Mat;

public class Display extends JFrame{
	
	JLabel videoDisplay;
	
	public Display(String title) {
		super(title);
		videoDisplay = new JLabel();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    setContentPane(videoDisplay);
	    setVisible(true);
	}
	
	public void renderFrame(Mat frame) {
		setSize(imageFromMatrix(frame).getWidth(null), imageFromMatrix(frame).getHeight(null));
        ImageIcon image = new ImageIcon(imageFromMatrix(frame));
        videoDisplay.setIcon(image);
        videoDisplay.repaint();
	}
	
	public static BufferedImage imageFromMatrix(Mat m) {
		int type = BufferedImage.TYPE_BYTE_GRAY;
		if ( m.channels() > 1 ) {
			type = BufferedImage.TYPE_3BYTE_BGR;
		}
		int bufferSize = m.channels()*m.cols()*m.rows();
		byte [] b = new byte[bufferSize];
		m.get(0,0,b);
		BufferedImage image = new BufferedImage(m.cols(),m.rows(), type);
		final byte[] targetPixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
		System.arraycopy(b, 0, targetPixels, 0, b.length);  
		return image;
	}

}
